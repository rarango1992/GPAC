{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "GPAC REST API",
    "description": "Desarrollo de una API REST para una aplicación de gestión de tareas que ayude a los usuarios a organizar y administrar sus actividades diarias. La aplicación debe permitir a los usuarios crear, seguir y completar tareas, establecer fechas límite, asignar prioridades y añadir notas según sea necesario. Además, los usuarios pueden categorizar las tareas en proyectos o etiquetas para una mejor organización. La aplicación debe ofrecer funcionalidades de búsqueda y filtrado, permitiendo a los usuarios buscar tareas específicas y aplicar filtros según criterios como fecha, prioridad o proyecto."
  },
  "host": "localhost:3000",
  "basePath": "/backend",
  "schemes": [
    "http"
  ],
  "paths": {
    "/users/Login": {
      "post": {
        "description": "Method used to login into the app.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/AddUser": {
      "post": {
        "description": "Method used to creade a new user. All parameters are required.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "adminPrivileges": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/SearchUsers": {
      "post": {
        "description": "Method used to get a list of users. It can be filtered and ordered (these parameters are optional).",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "filter": {
                  "example": "any"
                },
                "order": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/GetUsers": {
      "get": {
        "description": "Method used to get a list of users.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/UpdateUser": {
      "put": {
        "description": "Method used to update a user's information. Parameter '_id' is required, parameters 'adminPrivileges' and 'password' are optional.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "adminPrivileges": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "_id": {
                  "example": "XXXXXXXXXXXXXXXXXXXXXXXX"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/DeleteUser": {
      "delete": {
        "description": "Method used to delete a user from the app. Parameter '_id' is required.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "example": "XXXXXXXXXXXXXXXXXXXXXXXX"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/tasks/AddTask": {
      "post": {
        "description": "Method used to creade a new task. All parameters are required.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "XXXXXXXXXXXXXXXXXXXXXXXX"
                },
                "title": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "endDate": {
                  "example": "dd/mm/yyyy"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/tasks/SearchTasks": {
      "post": {
        "description": "Method used to get a list of tasks. It can be filtered and ordered (these parameters are optional).",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "filter": {
                  "example": "any"
                },
                "order": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/tasks/GetTasks": {
      "get": {
        "description": "Method used to get a list of tasks.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/tasks/GetTasksByUser/{userId}": {
      "get": {
        "description": "Method used to get a list of tasks for an specific user. The parameter 'userId' is required.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"          },
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/tasks/UpdateTask": {
      "put": {
        "description": "Method used to update a task's information. Parameters '_id' and  'userId are required, parameters 'title', 'description', 'status', 'priority', 'endDate', 'notes' and 'tags' are optional.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "XXXXXXXXXXXXXXXXXXXXXXXX"
                },
                "_id": {
                  "example": "XXXXXXXXXXXXXXXXXXXXXXXX"
                },
                "title": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "status": {
                  "type" : "number",
                  "example": 1
                },
                "priority": {
                  "type" : "number",
                  "example": 0
                },
                "endDate": {
                  "example": "dd/mm/yyyy"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/tasks/DeleteTask": {
      "delete": {
        "description": "Method used to delete a task from the app. Parameter '_id' is required.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "example": "XXXXXXXXXXXXXXXXXXXXXXXX"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/misc/GetStatusByCode/{code}": {
      "get": {
        "description": "Method used to get a status title depending on code provided. The parameter 'code' is a number between 1 to 3 and is required.",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "number"          },
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/misc/GetPriorityByCode/{code}": {
      "get": {
        "description": "Method used to get a priority title depending on code provided. The parameter 'code' is a number between 0 to 2 and is required.",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "number"          },
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  }
}